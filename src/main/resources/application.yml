server:
  port: 7777
  servlet:
    context-path: /iot
spring:
  application:
    name: iot
  datasource:
    url: jdbc:mysql://49.233.131.191:3306/iot?characterEncoding=utf-8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&serverTimezone=Asia/Shanghai
    username: root
    password: ChTYg3TJTYKQYk41
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用druid数据源(德鲁伊)
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      asyncInit: true
      #spring 监控
      aop-patterns: com.dpnice.iot.tutu.*
      #初始化时建立物理连接的个数。
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量
      max-active: 20
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 60000
      #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1
      #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validationQueryTimeout: 10
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      keepAlive: false
      #有两个含义：配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      #物理连接初始化的时候执行的sql
      #connectionInitSqls:
      #根据dbType自动识别,当数据库抛出一些不可恢复的异常时，抛弃连接
      #exceptionSorter:
      # 配置监控统计拦截的filters 常用的插件有：监控统计用的filter:stat,日志用的filter:log4j,防御sql注入的filter:wall
      filters: stat,wall
      use-global-data-source-stat: true
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      stat-view-servlet:
        allow: 127.0.0.1
        deny: ''
        enabled: true
        login-password: admin
        login-username: admin
        reset-enable: true
        url-pattern: /druid/*
      web-stat-filter:
        enabled: true
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
        principal-cookie-name: cookie_name
        principal-session-name: session_name
        profile-enable: ''
        session-stat-enable: true
        session-stat-max-count: 10
        url-pattern: /*

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: false
    open-in-view: true

#MQTT server
mqtt:
  host: tcp://www.dpnice.online:1883
  username: test
  password: test
  clientId: mqtt|client|spring000
  cleanStart: false
  topic: esp32-test/t&h&w
  qos: 0
  feedTopic: esp32/feed

alarm:
  #适宜湿度区间
  humidity: "[50,70]"
  #适宜温度区间
  temperature: "[16,25]"
  water: 10

logging:
  level:
    root: info
    com.dpnice.iot.tutu.handle.THWHandle: debug

jwt:
  header: Authorization
  base64-secret: ZmQ0ZGI5NjQ0MDQFjZDc0NGMxZWU2MmDPQ3nmDPQ3niZmQ0ZGI5NjQ0MDQFjZDc0NGMxZWU2MmDPQ3niceM1NzJmNTE0MzITE0MzI
  # 60s
  token-validity-in-seconds: 60
  # valid 30 hours
  token-validity-in-seconds-for-remember-me: 108000
iot:
  security:
    ignore:
      urls: /alarm/**,/humidity/**,/notice/**,/temperature/**,/water/**,/authenticate/**,/druid/**,/feed/list
